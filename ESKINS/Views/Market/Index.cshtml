@model List<ESKINS.DbServices.Models.ItemsModels>
@{
    ViewData["Title"] = "Market";
}
@section head{
	<link href="~/css/market2.css" type="text/css" rel="stylesheet" />
	<link href="~/css/style.css" type="text/css" rel="stylesheet" />
	<link href="~/css/card.css" type="text/css" rel="stylesheet" />
}
<style>

	.button-27 {
		margin: 6px;
		appearance: none;
		background-color: #101010;
		border: 2px solid #1A1A1A;
		border-radius: 15px;
		box-sizing: border-box;
		color: #FFFFFF;
		cursor: pointer;
		display: inline-block;
		font-family: Roobert,-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
		font-size: 16px;
		font-weight: 600;
		line-height: normal;
		margin: 0;
		min-height: 40px;
		min-width: 0;
		outline: none;
		padding: 16px 24px;
		text-align: center;
		text-decoration: none;
		transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
		user-select: none;
		-webkit-user-select: none;
		touch-action: manipulation;
		width: 100%;
		will-change: transform;
	}

		.button-27:disabled {
			pointer-events: none;
		}

		.button-27:hover {
			box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
			transform: translateY(-2px);
		}

		.button-27:active {
			box-shadow: none;
			transform: translateY(0);
		}

	.showDetails {
		margin-left: -30px;
		margin-top: -90px;
	}

</style>
<div class="filtering" style="height:auto; box-shadow: 0px 9px 30px black;">
	<div class="box1" style="text-align:center;">
		<ul style="display: flex; justify-content: center; align-items: center; list-style-type: none;">
			<li>
				<button class="button-27" id="refresh" onclick="location.href='@Url.Action("Index", "Market")'"><span class="glyphicon glyphicon-refresh"></span> Refresh</button>
			</li>
			<li>
				<button class="button-27" id="discount" ><span class="bi bi-percent"></span> Best Discount</button>
			</li>
			<li>
				<button class="button-27" id="newest" ><span class="bi bi-arrow-down"></span> Newest First</button>
			</li>
			<li>
				<button class="button-27" id="oldest" ><span class="bi bi-arrow-up"></span> Oldest First</button>
			</li>
			<li>
				<button class="button-27" id="lowest" ><span class="bi bi-caret-down-fill"></span> Lowest First</button>
			</li>
			<li>
				<button class="button-27" id="highest"><span class="bi bi-caret-up-fill"></span> Highest First</button>
			</li>
		</ul>
	</div>
</div> 

@*<button class="button-20" style="margin-left:-30px;margin-top:-90px;" id="myModalBtn"><i class="bi bi-info-circle"></i></button>*@
<div id="myModalContainer"></div>
<main class="cd-main-content">
	<div style="margin-left: 100px;">
		<section class="cd-gallery">
			<div id="itemContainer">
				@Html.Partial("_ItemPartial", Model)
			</div>
		<div class="cd-fail-message">No results found</div>
		</section> <!-- cd-gallery -->
	</div>

	<div id="myModalContainer"></div>
	<div class="cd-filter" style="background-color:	#181716; color: #a9a9a9;">
		<form>
			<div class="cd-filter-block">
				<h4>Search</h4>

				<div class="cd-filter-content" style="display:none;">
					<input type="search" id="searchInput" placeholder="Search Any Skin Here..." oninput="searchItems()">
				</div> <!-- cd-filter-content -->
			</div> <!-- cd-filter-block -->
			@await Component.InvokeAsync("CategoriesComponent")
			@await Component.InvokeAsync("ItemLocationComponent")
			@await Component.InvokeAsync("CollectionsComponent")
			@await Component.InvokeAsync("UniqueItemsComponent")
			@await Component.InvokeAsync("PhasesComponent")
		</form>
		<a href="#0" class="cd-close" style="color: #a9a9a9;text-decoration:none;">Close</a>
	</div> 
	<a href="#0" class="cd-filter-trigger" style="text-decoration:none;">Filters</a>
</main> <!-- cd-main-content -->

<script>
	// radio buttons
	$(document).ready(function () {
		$('input[type="radio"]').change(function () {
			var selectedValue = $(this).attr('id'); // Get the selected value
			// Send a POST request to the controller
			$.ajax({
				url: '@Url.Action("SearchCollection", "Market")',
				type: 'POST',
				data: { checkedCollection: selectedValue },
				success: function (response) {
					// Handle the response from the server
					$('#itemContainer').html(response);
				},
				error: function (xhr, status, error) {
					// Handle the error
					alert('An error occurred while searching for items.');
				}
			});
		});
	});
	// filter select.
	$(document).ready(function () {
		$('#selectThis').change(function () {
			var selectedValue = $(this).val(); // Get the selected value
			// Disable other radio buttons in the group
			$('input[type="radio"]').not(':checked').prop('disabled', true);
			// Iterate over each option in the select element
			$('#selectThis option').each(function () {
				if ($(this).val() === selectedValue) {
					// Send AJAX request to the server
					$.ajax({
						url: '@Url.Action("SearchLocation", "Market")',
						type: 'POST',
						data: { checkedLocation: selectedValue },
						success: function (response) {
							// Handle the response from the server
							// Update the UI with the filtered items
							$('#itemContainer').html(response);
						},
						error: function (xhr, status, error) {
							// Handle the error
							alert('An error occurred while searching for items.');
						}
					});
				} else {
				}
			});
		});
	});
	//Unigue items checkboxes
	$(document).ready(function () {
		// Attach event listener to the category checkboxes
		$('.unique-checkbox').change(function () {
			// Get the checked checkboxes
			var checkedCategories = $('.unique-checkbox:checked').map(function () {
				return $(this).val();
			}).get();

			// Send AJAX request to the server
			$.ajax({
				url: '@Url.Action("SearchUnique", "Market")',
				type: 'POST',
				data: { categories: checkedCategories },
				success: function (response) {
					// Handle the response from the server
					// Update the UI with the filtered items
					$('#itemContainer').html(response);
				},
				error: function (xhr, status, error) {
					// Handle the error
					alert('An error occurred while searching for items.');
				}
			});
		});
	});
	//phase checkboxes
	$(document).ready(function () {
		// Attach event listener to the category checkboxes
		$('.phase-checkbox').change(function () {
			// Get the checked checkboxes
			var checkedCategories = $('.phase-checkbox:checked').map(function () {
				return $(this).val();
			}).get();

			// Send AJAX request to the server
			$.ajax({
				url: '@Url.Action("SearchPhases", "Market")',
				type: 'POST',
				data: { categories: checkedCategories },
				success: function (response) {
					// Handle the response from the server
					// Update the UI with the filtered items
					$('#itemContainer').html(response);
				},
				error: function (xhr, status, error) {
					// Handle the error
					alert('An error occurred while searching for items.');
				}
			});
		});
	});
	//categories checkboxes
	$(document).ready(function () {
		// Attach event listener to the category checkboxes
		$('.category-checkbox').change(function () {
			// Get the checked checkboxes
			var checkedCategories = $('.category-checkbox:checked').map(function () {
				return $(this).val();
			}).get();

			// Send AJAX request to the server
			$.ajax({
				url: '@Url.Action("SearchCategories", "Market")',
				type: 'POST',
				data: { categories: checkedCategories },
				success: function (response) {
					// Handle the response from the server
					// Update the UI with the filtered items
					$('#itemContainer').html(response);
				},
				error: function (xhr, status, error) {
					// Handle the error
					alert('An error occurred while searching for items.');
				}
			});
		});
	});
	// search items function
	var searchTimeout; // Variable to store the timeout

	function searchItems() {
		clearTimeout(searchTimeout); // Clear any existing timeout

		searchTimeout = setTimeout(function () {
			var searchQuery = document.getElementById('searchInput').value;

			// Make an AJAX call to search for items
			$.ajax({
				url: '@Url.Action("SearchItems", "Market")',
				type: 'POST',
				data: { query: searchQuery },
				success: function (data) {
					// Update the item container with the search results
					$('#itemContainer').html(data);
				},
				error: function () {
					alert('An error occurred while searching for items.');
				}
			});
		}, 500); // Delay the search by 500 milliseconds (adjust as needed)
	}

	//Button click event listener
	document.getElementById("highest").addEventListener("click", function () {
		filterItems();
	});

	// AJAX call to filter items
	function filterItems() {
		$.ajax({
			url: '@Url.Action("HighestPrice", "Market")',
			type: 'GET',
			success: function (data) {
				// Update the item container with the filtered items
				$('#itemContainer').html(data);
			},
			error: function () {
				alert('An error occurred while filtering items.');
			}
		});
	}

	document.getElementById("lowest").addEventListener("click", function () {
		filterLowest();
	});

	// AJAX call to filter items
	function filterLowest() {
		$.ajax({
			url: '@Url.Action("LowestPrice", "Market")',
			type: 'GET',
			success: function (data) {
				// Update the item container with the filtered items
				$('#itemContainer').html(data);
			},
			error: function () {
				alert('An error occurred while filtering items.');
			}
		});
	}

	document.getElementById("oldest").addEventListener("click", function () {
		filterOldest();
	});

	// AJAX call to filter items
	function filterOldest() {
		$.ajax({
			url: '@Url.Action("Oldest", "Market")',
			type: 'GET',
			success: function (data) {
				// Update the item container with the filtered items
				$('#itemContainer').html(data);
			},
			error: function () {
				alert('An error occurred while filtering items.');
			}
		});
	}

	document.getElementById("newest").addEventListener("click", function () {
		filterNewest();
	});

	// AJAX call to filter items
	function filterNewest() {
		$.ajax({
			url: '@Url.Action("Newest", "Market")',
			type: 'GET',
			success: function (data) {
				// Update the item container with the filtered items
				$('#itemContainer').html(data);
			},
			error: function () {
				alert('An error occurred while filtering items.');
			}
		});
	}

	document.getElementById("discount").addEventListener("click", function () {
		filterDiscount();
	});

	// AJAX call to filter items
	function filterDiscount() {
		$.ajax({
			url: '@Url.Action("BestDeals", "Market")',
			type: 'GET',
			success: function (data) {
				// Update the item container with the filtered items
				$('#itemContainer').html(data);
			},
			error: function () {
				alert('An error occurred while filtering items.');
			}
		});
	}

</script>
