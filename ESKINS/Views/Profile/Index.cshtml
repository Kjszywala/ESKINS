@model ESKINS.DbServices.Models.UsersModels
@{
    Layout = "_MainPageLayout";
}
@section head{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit Profile</title>
</head>
<style>
    input[type="text"] {
        margin-top: 2px;
        width: 200px;
    }
</style>
<body>
    <header class="privacy">
        <h2><strong>Edit Profile</strong></h2>
    </header>
    <br />
    <br />
    <div class="container1">
        <center>
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-success">
                    @ViewBag.Message
                </div>
            }
        @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="itemContainers">
                <div class="row justify-content-center" style="margin-left: 175px">
                    <input type="hidden" id="ids" name="ids" value="@Model.Id" />
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br>
                <center>
                    <div class="form-group">
                        <input type="submit" value="Edit Profile" class="btn btn-success" style="width: 100px;" />
                    </div>
                </center>
            </div>
        }
        </center>
    </div>
    <br />
</body>
</html>
<style>
    .control-label{
        color:white;
    }
    input[type=password]{
        color:black;
        border-radius: 4px;
        height: 34px;
        font-size: 14px;
        width: 200px;
        display: block;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        margin-top: 2px;
    }
    button{
        color:black;
    }
    header {
        background-color: #181716;
        color: white;
        padding: 20px;
        text-align: center;
        box-shadow: 0px 9px 30px black;
    }

    .h21 {
        margin-top: 0;
        font-size: 36px;
        text-transform: uppercase;
        letter-spacing: 2px;
        color: white;
    }

    .h2 {
        margin-top: 0;
        font-size: 36px;
        text-transform: uppercase;
        letter-spacing: 2px;
        color: white;
    }

    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        color: white;
    }

    .container1 {
        border-radius: 8px;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.6);
        padding: 32px;
        margin-right: auto;
        margin-left: auto;
        max-width: 800px;
        text-align:center;
    }

    h1 {
        color: #333;
    }

    .job-description {
        font-size: 18px;
        line-height: 1.5;
        margin-bottom: 20px;
    }

    h3 {
        color: white;
        margin-top: 30px;
        margin-bottom: 10px;
    }

    ul {
        list-style-type: disc;
        margin-left: 20px;
    }

    li {
        font-size: 16px;
        line-height: 1.5;
    }

    .how-to-apply {
        margin-top: 30px;
    }

    .how-to-apply a {
        color: #007bff;
        text-decoration: none;
    }

    .how-to-apply a:hover {
        text-decoration: underline;
    }

</style>
