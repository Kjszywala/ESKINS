@using ESKINS.DbServices.Models;
@model ItemsModels

@{
    Layout = "_Layout";
    ViewBag.Title = "Create";
}
@section head{
    <link rel="stylesheet" href="~/css/PaymentMethods/create.css" />
}
<center>
    <h2>Create Item</h2>
</center>
<br />
@using (Html.BeginForm("Create", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="itemContainers">
    <div class="row">
        <div class="col">
            <div class="container text-light py-5">

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemFloat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemFloat, new { htmlAttributes = new { @class = "form-control", step = "0.00000000000001" } })
                        @Html.ValidationMessageFor(model => model.ItemFloat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Pattern, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Pattern, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pattern, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActualPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ActualPrice, new { htmlAttributes = new { @class = "form-control", step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.ActualPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="container text-light py-5">

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StatTrack, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.StatTrack)
                            @Html.ValidationMessageFor(model => model.StatTrack, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Souvenir, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Souvenir)
                            @Html.ValidationMessageFor(model => model.Souvenir, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OnSale, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.OnSale)
                            @Html.ValidationMessageFor(model => model.OnSale, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="file" id="file" />
                        @Html.ValidationMessageFor(model => model.ItemImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.UserId, (IEnumerable<SelectListItem>)ViewBag.UserList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.CategoryList, "- Select Category -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="col">
            <div class="container text-light py-5">

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemLogsId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ItemLogsId, (IEnumerable<SelectListItem>)ViewBag.ItemLogsList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemLogsId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemLocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ItemLocationId, (IEnumerable<SelectListItem>)ViewBag.ItemLocationList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemLocationId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemCollectionId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ItemCollectionId, (IEnumerable<SelectListItem>)ViewBag.ItemCollectionList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemCollectionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhaseId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PhaseId, (IEnumerable<SelectListItem>)ViewBag.PhaseList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PhaseId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QualityId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.QualityId, (IEnumerable<SelectListItem>)ViewBag.QualityList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QualityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExteriorId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ExteriorId, (IEnumerable<SelectListItem>)ViewBag.ExteriorList, "- Select Item Location -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExteriorId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br>
    <center>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" style="width: 100px;" />
            </div>
        </div>
    </center>
    </div>
}
<center>
    <div>
        <button class="btn btn-success" type="submit" onclick="location.href='@Url.Action("Index", "Items")'">Back To List</button>
    </div>
</center>
<style>
    .container {
        border-radius: 4px;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.6);
        padding: 32px;
    }
    .row .container{
        max-width: 350px;
        height: 600px;
    }   
    .text-light {
        color: #fff;
    }

    h1 {
        font-size: 36px;
        font-weight: bold;
        margin-bottom: 24px;
    }

    p {
        font-size: 18px;
        line-height: 1.5;
    }
    h2 {
        color: #f2f2f2;
    }

    .form-horizontal {
        max-width: 500px;
        margin: 0 auto;
    }

    #file {
        color: white;
    }

    .control-label {
        color: #fff;
        font-weight: bold;
    }

    .form-control {
        background-color: #f9f9f9;
        border: none;
        border-radius: 0;
        box-shadow: none;
        width: auto;
    }

    .checkbox input[type="checkbox"] {
        margin-top: 2px;
    }

    .btn-default:hover {
        background-color: #2e8b57;
    }

</style>